module(name = "com_github_buildbarn_bb_remote_asset")

bazel_dep(name = "com_github_buildbarn_bb_storage")
bazel_dep(name = "bazel_remote_apis", version = "0.0.0")
bazel_dep(name = "gazelle", version = "0.38.0")
bazel_dep(name = "googleapis", version = "0.0.0-20240819-fe8ba054a")
bazel_dep(name = "jsonnet_go", version = "0.20.0", repo_name = "google_jsonnet_go")
bazel_dep(name = "protobuf", version = "28.1")
bazel_dep(name = "rules_go", version = "0.50.1")
bazel_dep(name = "rules_jsonnet", version = "0.6.0")
bazel_dep(name = "rules_proto", version = "6.0.2")
bazel_dep(name = "toolchains_llvm", version = "1.1.2")

git_override(
    module_name = "com_github_buildbarn_bb_storage",
    commit = "8abbcfab01bcde294b20c2070baba9fd242bab7f",
    remote = "https://github.com/buildbarn/bb-storage.git",
)

git_override(
    module_name = "bazel_remote_apis",
    commit = "6777112ef7defa6705b1ebd2831d6c7efeb12ba2",
    remote = "https://github.com/bazelbuild/remote-apis.git",
)

git_override(
    module_name = "gazelle",
    commit = "4d0129d7adae33e8e648d3624aff8fa8f93f375b",
    patches = ["//:patches/gazelle/dont-flatten-srcs.diff"],
    remote = "https://github.com/bazelbuild/bazel-gazelle.git",
)

go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
use_repo(
    go_deps,
    "cc_mvdan_gofumpt",
    "com_github_bazelbuild_buildtools",
    "com_github_golang_mock",
    "com_github_prometheus_client_golang",
    "com_github_stretchr_testify",
    "org_golang_google_genproto_googleapis_rpc",
    "org_golang_google_grpc",
    "org_golang_google_protobuf",
    "org_golang_x_lint",
)

go_deps_dev = use_extension("@gazelle//:extensions.bzl", "go_deps", dev_dependency = True)
go_deps_dev.module_override(
    patches = ["@com_github_buildbarn_bb_storage//:patches/com_github_grpc_ecosystem_go_grpc_prometheus/client-metrics-prevent-handled-twice.diff"],
    path = "github.com/grpc-ecosystem/go-grpc-prometheus",
)

http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

llvm = use_extension("@toolchains_llvm//toolchain/extensions:llvm.bzl", "llvm", dev_dependency = True)
llvm.toolchain(
    llvm_version = "14.0.0",
)
use_repo(llvm, "llvm_toolchain_llvm")
