load("@rules_go//extras:gomock.bzl", "gomock")
load("@rules_go//go:def.bzl", "go_library")

gomock(
    name = "blobstore",
    out = "blobstore.go",
    interfaces = [
        "BlobAccess",
    ],
    library = "@com_github_buildbarn_bb_storage//pkg/blobstore",
    package = "mock",
)

gomock(
    name = "auth",
    out = "auth.go",
    interfaces = [
        "Authorizer",
    ],
    library = "@com_github_buildbarn_bb_storage//pkg/auth",
    package = "mock",
)

gomock(
    name = "aliases",
    out = "aliases.go",
    interfaces = [
        "ReadCloser",
        "RoundTripper",
    ],
    library = "//internal/mock/aliases",
    package = "mock",
)

gomock(
    name = "fetcher",
    out = "fetcher.go",
    interfaces = ["Fetcher"],
    library = "//pkg/fetch",
    package = "mock",
)

gomock(
    name = "storage",
    out = "storage.go",
    interfaces = ["AssetStore"],
    library = "//pkg/storage",
    package = "mock",
)

go_library(
    name = "mock",
    srcs = [
        "aliases.go",
        "auth.go",
        "blobstore.go",
        "dummy.go",
        "fetcher.go",
        "storage.go",
    ],
    importpath = "github.com/buildbarn/bb-remote-asset/internal/mock",
    visibility = ["//:__subpackages__"],
    # keep
    deps = [
        "//pkg/proto/asset",
        "//pkg/qualifier",
        "@bazel_remote_apis//build/bazel/remote/asset/v1:remote_asset_go_proto",
        "@bazel_remote_apis//build/bazel/remote/execution/v2:remote_execution_go_proto",
        "@com_github_buildbarn_bb_storage//pkg/blobstore/buffer",
        "@com_github_buildbarn_bb_storage//pkg/blobstore/local",
        "@com_github_buildbarn_bb_storage//pkg/blobstore/slicing",
        "@com_github_buildbarn_bb_storage//pkg/builder",
        "@com_github_buildbarn_bb_storage//pkg/clock",
        "@com_github_buildbarn_bb_storage//pkg/digest",
        "@com_github_buildbarn_bb_storage//pkg/filesystem",
        "@com_github_buildbarn_bb_storage//pkg/proto/configuration/grpc",
        "@com_github_golang_mock//gomock:go_default_library",
    ],
)
